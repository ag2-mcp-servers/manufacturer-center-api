# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:24:31+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class Capacity(BaseModel):
    unit: Optional[str] = Field(
        None, description='The unit of the capacity, i.e., MB, GB, or TB.'
    )
    value: Optional[str] = Field(None, description='The numeric value of the capacity.')


class Certification(BaseModel):
    authority: Optional[str] = Field(
        None, description='Required. Name of the certification body.'
    )
    link: Optional[str] = Field(
        None, description='Optional. A URL link to the certification.'
    )
    logo: Optional[str] = Field(
        None, description='Optional. A URL link to the certification logo.'
    )
    name: Optional[str] = Field(
        None, description='Required. Name of the certification.'
    )
    validUntil: Optional[str] = Field(
        None, description='Optional. The expiration date (UTC).'
    )
    value: Optional[str] = Field(
        None, description='Required. A custom value of the certification.'
    )


class Count(BaseModel):
    unit: Optional[str] = Field(
        None, description='The unit in which these products are counted.'
    )
    value: Optional[str] = Field(
        None, description='The numeric value of the number of products in a package.'
    )


class Status(Enum):
    UNKNOWN = 'UNKNOWN'
    ACTIVE = 'ACTIVE'
    PENDING = 'PENDING'
    DISAPPROVED = 'DISAPPROVED'


class DestinationStatus(BaseModel):
    destination: Optional[str] = Field(None, description='The name of the destination.')
    status: Optional[Status] = Field(None, description='The status of the destination.')


class Empty(BaseModel):
    pass


class FloatUnit(BaseModel):
    amount: Optional[float] = Field(None, description='amount.')
    unit: Optional[str] = Field(None, description='unit.')


class Grocery(BaseModel):
    activeIngredients: Optional[str] = Field(None, description='Active ingredients.')
    alcoholByVolume: Optional[float] = Field(None, description='Alcohol by volume.')
    allergens: Optional[str] = Field(None, description='Allergens.')
    derivedNutritionClaim: Optional[List[str]] = Field(
        None, description='Derived nutrition claim.'
    )
    directions: Optional[str] = Field(None, description='Directions.')
    indications: Optional[str] = Field(None, description='Indications.')
    ingredients: Optional[str] = Field(None, description='Ingredients.')
    nutritionClaim: Optional[List[str]] = Field(None, description='Nutrition claim.')
    storageInstructions: Optional[str] = Field(
        None, description='Storage instructions.'
    )


class Status1(Enum):
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    PENDING_PROCESSING = 'PENDING_PROCESSING'
    PENDING_CRAWL = 'PENDING_CRAWL'
    OK = 'OK'
    ROBOTED = 'ROBOTED'
    XROBOTED = 'XROBOTED'
    CRAWL_ERROR = 'CRAWL_ERROR'
    PROCESSING_ERROR = 'PROCESSING_ERROR'
    DECODING_ERROR = 'DECODING_ERROR'
    TOO_BIG = 'TOO_BIG'
    CRAWL_SKIPPED = 'CRAWL_SKIPPED'
    HOSTLOADED = 'HOSTLOADED'
    HTTP_404 = 'HTTP_404'


class Type(Enum):
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    CRAWLED = 'CRAWLED'
    UPLOADED = 'UPLOADED'


class Image(BaseModel):
    imageUrl: Optional[str] = Field(
        None,
        description='The URL of the image. For crawled images, this is the provided URL. For uploaded images, this is a serving URL from Google if the image has been processed successfully.',
    )
    status: Optional[Status1] = Field(
        None, description='The status of the image. @OutputOnly'
    )
    type: Optional[Type] = Field(
        None,
        description='The type of the image, i.e., crawled or uploaded. @OutputOnly',
    )


class Resolution(Enum):
    RESOLUTION_UNSPECIFIED = 'RESOLUTION_UNSPECIFIED'
    USER_ACTION = 'USER_ACTION'
    PENDING_PROCESSING = 'PENDING_PROCESSING'


class Severity(Enum):
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    ERROR = 'ERROR'
    WARNING = 'WARNING'
    INFO = 'INFO'


class Issue(BaseModel):
    attribute: Optional[str] = Field(
        None,
        description='If present, the attribute that triggered the issue. For more information about attributes, see https://support.google.com/manufacturers/answer/6124116.',
    )
    description: Optional[str] = Field(
        None,
        description='Longer description of the issue focused on how to resolve it.',
    )
    destination: Optional[str] = Field(
        None, description='The destination this issue applies to.'
    )
    resolution: Optional[Resolution] = Field(
        None, description='What needs to happen to resolve the issue.'
    )
    severity: Optional[Severity] = Field(None, description='The severity of the issue.')
    timestamp: Optional[str] = Field(
        None, description='The timestamp when this issue appeared.'
    )
    title: Optional[str] = Field(
        None, description='Short title describing the nature of the issue.'
    )
    type: Optional[str] = Field(
        None,
        description='The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”, “IMAGE_NOT_SERVEABLE”, etc.',
    )


class Price(BaseModel):
    amount: Optional[str] = Field(None, description='The numeric value of the price.')
    currency: Optional[str] = Field(
        None, description='The currency in which the price is denoted.'
    )


class ProductCertification(BaseModel):
    brand: Optional[str] = Field(
        None,
        description="Required. This is the product's brand name. The brand is used to help identify your product.",
    )
    certification: Optional[List[Certification]] = Field(
        None,
        description='Required. A list of certifications to link to the described product.',
    )
    countryCode: Optional[List[str]] = Field(
        None, description='Optional. A 2-letter country code (ISO 3166-1 Alpha 2).'
    )
    destinationStatuses: Optional[List[DestinationStatus]] = Field(
        None, description='Output only. The statuses of the destinations.'
    )
    issues: Optional[List[Issue]] = Field(
        None,
        description='Output only. A server-generated list of issues associated with the product.',
    )
    mpn: Optional[List[str]] = Field(
        None,
        description='Optional. These are the Manufacturer Part Numbers (MPN). MPNs are used to uniquely identify a specific product among all products from the same manufacturer',
    )
    name: Optional[str] = Field(
        None,
        description='Required. The unique name identifier of a product certification Format: accounts/{account}/languages/{language_code}/productCertifications/{id} Where `id` is a some unique identifier and `language_code` is a 2-letter ISO 639-1 code of a Shopping supported language according to https://support.google.com/merchants/answer/160637.',
    )
    productCode: Optional[List[str]] = Field(
        None, description='Optional. Another name for GTIN.'
    )
    productType: Optional[List[str]] = Field(
        None,
        description='Optional. These are your own product categorization system in your product data.',
    )
    title: Optional[str] = Field(
        None,
        description='Required. This is to clearly identify the product you are certifying.',
    )


class ProductDetail(BaseModel):
    attributeName: Optional[str] = Field(None, description='The name of the attribute.')
    attributeValue: Optional[str] = Field(
        None, description='The value of the attribute.'
    )
    sectionName: Optional[str] = Field(
        None,
        description='A short section name that can be reused between multiple product details.',
    )


class VoluntaryNutritionFact(BaseModel):
    dailyPercentage: Optional[float] = Field(None, description='Daily percentage.')
    name: Optional[str] = Field(None, description='Name.')
    value: Optional[FloatUnit] = Field(None, description='Value.')


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class IncludeEnum(Enum):
    UNKNOWN = 'UNKNOWN'
    ATTRIBUTES = 'ATTRIBUTES'
    ISSUES = 'ISSUES'
    DESTINATION_STATUSES = 'DESTINATION_STATUSES'


class Include(RootModel[List[IncludeEnum]]):
    root: List[IncludeEnum]


class Include1(RootModel[List[IncludeEnum]]):
    root: List[IncludeEnum]


class FeatureDescription(BaseModel):
    headline: Optional[str] = Field(
        None, description='A short description of the feature.'
    )
    image: Optional[Image] = Field(
        None, description='An optional image describing the feature.'
    )
    text: Optional[str] = Field(
        None, description='A detailed description of the feature.'
    )


class ListProductCertificationsResponse(BaseModel):
    nextPageToken: Optional[str] = Field(
        None,
        description='A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.',
    )
    productCertifications: Optional[List[ProductCertification]] = Field(
        None,
        description='The product certifications from the specified certification body.',
    )


class Nutrition(BaseModel):
    addedSugars: Optional[FloatUnit] = Field(None, description='Added sugars.')
    addedSugarsDailyPercentage: Optional[float] = Field(
        None, description='Added sugars daily percentage.'
    )
    calcium: Optional[FloatUnit] = Field(None, description='Calcium.')
    calciumDailyPercentage: Optional[float] = Field(
        None, description='Calcium daily percentage.'
    )
    cholesterol: Optional[FloatUnit] = Field(None, description='Cholesterol.')
    cholesterolDailyPercentage: Optional[float] = Field(
        None, description='Cholesterol daily percentage.'
    )
    dietaryFiber: Optional[FloatUnit] = Field(None, description='Dietary fiber.')
    dietaryFiberDailyPercentage: Optional[float] = Field(
        None, description='Dietary fiber daily percentage.'
    )
    energy: Optional[FloatUnit] = Field(
        None, description='Mandatory Nutrition Facts. Energy.'
    )
    energyFromFat: Optional[FloatUnit] = Field(None, description='Energy from fat.')
    folateDailyPercentage: Optional[float] = Field(
        None, description='Folate daily percentage.'
    )
    folateFolicAcid: Optional[FloatUnit] = Field(None, description='Folate folic acid.')
    folateMcgDfe: Optional[float] = Field(None, description='Folate mcg DFE.')
    iron: Optional[FloatUnit] = Field(None, description='Iron.')
    ironDailyPercentage: Optional[float] = Field(
        None, description='Iron daily percentage.'
    )
    monounsaturatedFat: Optional[FloatUnit] = Field(
        None, description='Monounsaturated fat.'
    )
    nutritionFactMeasure: Optional[str] = Field(
        None, description='Nutrition fact measure.'
    )
    polyols: Optional[FloatUnit] = Field(None, description='Polyols.')
    polyunsaturatedFat: Optional[FloatUnit] = Field(
        None, description='Polyunsaturated fat.'
    )
    potassium: Optional[FloatUnit] = Field(None, description='Potassium.')
    potassiumDailyPercentage: Optional[float] = Field(
        None, description='Potassium daily percentage.'
    )
    preparedSizeDescription: Optional[str] = Field(
        None, description='Prepared size description.'
    )
    protein: Optional[FloatUnit] = Field(None, description='Protein.')
    proteinDailyPercentage: Optional[float] = Field(
        None, description='Protein daily percentage.'
    )
    saturatedFat: Optional[FloatUnit] = Field(None, description='Saturated fat.')
    saturatedFatDailyPercentage: Optional[float] = Field(
        None, description='Saturated fat daily percentage.'
    )
    servingSizeDescription: Optional[str] = Field(
        None, description='Food Serving Size. Serving size description.'
    )
    servingSizeMeasure: Optional[FloatUnit] = Field(
        None, description='Serving size measure.'
    )
    servingsPerContainer: Optional[str] = Field(
        None, description='Servings per container.'
    )
    sodium: Optional[FloatUnit] = Field(None, description='Sodium.')
    sodiumDailyPercentage: Optional[float] = Field(
        None, description='Sodium daily percentage.'
    )
    starch: Optional[FloatUnit] = Field(None, description='Starch.')
    totalCarbohydrate: Optional[FloatUnit] = Field(
        None, description='Total carbohydrate.'
    )
    totalCarbohydrateDailyPercentage: Optional[float] = Field(
        None, description='Total carbohydrate daily percentage.'
    )
    totalFat: Optional[FloatUnit] = Field(None, description='Total fat.')
    totalFatDailyPercentage: Optional[float] = Field(
        None, description='Total fat daily percentage.'
    )
    totalSugars: Optional[FloatUnit] = Field(None, description='Total sugars.')
    totalSugarsDailyPercentage: Optional[float] = Field(
        None, description='Total sugars daily percentage.'
    )
    transFat: Optional[FloatUnit] = Field(None, description='Trans fat.')
    transFatDailyPercentage: Optional[float] = Field(
        None, description='Trans fat daily percentage.'
    )
    vitaminD: Optional[FloatUnit] = Field(None, description='Vitamin D.')
    vitaminDDailyPercentage: Optional[float] = Field(
        None, description='Vitamin D daily percentage.'
    )
    voluntaryNutritionFact: Optional[List[VoluntaryNutritionFact]] = Field(
        None, description='Voluntary nutrition fact.'
    )


class Attributes(BaseModel):
    additionalImageLink: Optional[List[Image]] = Field(
        None,
        description='The additional images of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#addlimage.',
    )
    ageGroup: Optional[str] = Field(
        None,
        description='The target age group of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#agegroup.',
    )
    brand: Optional[str] = Field(
        None,
        description='The brand name of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#brand.',
    )
    capacity: Optional[Capacity] = Field(
        None,
        description='The capacity of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#capacity.',
    )
    color: Optional[str] = Field(
        None,
        description='The color of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#color.',
    )
    count: Optional[Count] = Field(
        None,
        description='The count of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#count.',
    )
    description: Optional[str] = Field(
        None,
        description='The description of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#description.',
    )
    disclosureDate: Optional[str] = Field(
        None,
        description='The disclosure date of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#disclosure.',
    )
    excludedDestination: Optional[List[str]] = Field(
        None,
        description='A list of excluded destinations such as "ClientExport", "ClientShoppingCatalog" or "PartnerShoppingCatalog". For more information, see https://support.google.com/manufacturers/answer/7443550',
    )
    featureDescription: Optional[List[FeatureDescription]] = Field(
        None,
        description='The rich format description of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#featuredesc.',
    )
    flavor: Optional[str] = Field(
        None,
        description='The flavor of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#flavor.',
    )
    format: Optional[str] = Field(
        None,
        description='The format of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#format.',
    )
    gender: Optional[str] = Field(
        None,
        description='The target gender of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#gender.',
    )
    grocery: Optional[Grocery] = Field(
        None,
        description='Grocery Attributes. See more at https://support.google.com/manufacturers/answer/12098458#grocery.',
    )
    gtin: Optional[List[str]] = Field(
        None,
        description='The Global Trade Item Number (GTIN) of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#gtin.',
    )
    imageLink: Optional[Image] = Field(
        None,
        description='The image of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#image.',
    )
    includedDestination: Optional[List[str]] = Field(
        None,
        description='A list of included destinations such as "ClientExport", "ClientShoppingCatalog" or "PartnerShoppingCatalog". For more information, see https://support.google.com/manufacturers/answer/7443550',
    )
    itemGroupId: Optional[str] = Field(
        None,
        description='The item group id of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#itemgroupid.',
    )
    material: Optional[str] = Field(
        None,
        description='The material of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#material.',
    )
    mpn: Optional[str] = Field(
        None,
        description='The Manufacturer Part Number (MPN) of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#mpn.',
    )
    nutrition: Optional[Nutrition] = Field(
        None,
        description='Nutrition Attributes. See more at https://support.google.com/manufacturers/answer/12098458#food-servings.',
    )
    pattern: Optional[str] = Field(
        None,
        description='The pattern of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#pattern.',
    )
    productDetail: Optional[List[ProductDetail]] = Field(
        None,
        description='The details of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productdetail.',
    )
    productHighlight: Optional[List[str]] = Field(
        None,
        description='The product highlights. For more information, see https://support.google.com/manufacturers/answer/10066942',
    )
    productLine: Optional[str] = Field(
        None,
        description='The name of the group of products related to the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productline.',
    )
    productName: Optional[str] = Field(
        None,
        description='The canonical name of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productname.',
    )
    productPageUrl: Optional[str] = Field(
        None,
        description='The URL of the detail page of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productpage.',
    )
    productType: Optional[List[str]] = Field(
        None,
        description='The type or category of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#producttype.',
    )
    releaseDate: Optional[str] = Field(
        None,
        description='The release date of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#release.',
    )
    richProductContent: Optional[List[str]] = Field(
        None,
        description='Rich product content. For more information, see https://support.google.com/manufacturers/answer/9389865',
    )
    scent: Optional[str] = Field(
        None,
        description='The scent of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#scent.',
    )
    size: Optional[str] = Field(
        None,
        description='The size of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#size.',
    )
    sizeSystem: Optional[str] = Field(
        None,
        description='The size system of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#sizesystem.',
    )
    sizeType: Optional[List[str]] = Field(
        None,
        description='The size type of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#sizetype.',
    )
    suggestedRetailPrice: Optional[Price] = Field(
        None,
        description='The suggested retail price (MSRP) of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#price.',
    )
    targetClientId: Optional[str] = Field(
        None,
        description='The target client id. Should only be used in the accounts of the data partners. For more information, see https://support.google.com/manufacturers/answer/10857344',
    )
    theme: Optional[str] = Field(
        None,
        description='The theme of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#theme.',
    )
    title: Optional[str] = Field(
        None,
        description='The title of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#title.',
    )
    videoLink: Optional[List[str]] = Field(
        None,
        description='The videos of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#video.',
    )


class Product(BaseModel):
    attributes: Optional[Attributes] = Field(
        None,
        description='Attributes of the product uploaded to the Manufacturer Center. Manually edited attributes are taken into account.',
    )
    contentLanguage: Optional[str] = Field(
        None,
        description='The content language of the product as a two-letter ISO 639-1 language code (for example, en).',
    )
    destinationStatuses: Optional[List[DestinationStatus]] = Field(
        None, description='The status of the destinations.'
    )
    issues: Optional[List[Issue]] = Field(
        None,
        description='A server-generated list of issues associated with the product.',
    )
    name: Optional[str] = Field(
        None,
        description='Name in the format `{target_country}:{content_language}:{product_id}`. `target_country` - The target country of the product as a CLDR territory code (for example, US). `content_language` - The content language of the product as a two-letter ISO 639-1 language code (for example, en). `product_id` - The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.',
    )
    parent: Optional[str] = Field(
        None,
        description='Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.',
    )
    productId: Optional[str] = Field(
        None,
        description='The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.',
    )
    targetCountry: Optional[str] = Field(
        None,
        description='The target country of the product as a CLDR territory code (for example, US).',
    )


class ListProductsResponse(BaseModel):
    nextPageToken: Optional[str] = Field(
        None,
        description='The token for the retrieval of the next page of product statuses.',
    )
    products: Optional[List[Product]] = Field(None, description='List of the products.')
